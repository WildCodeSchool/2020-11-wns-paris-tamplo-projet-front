[{"/home/audrey/Bureau/tamplo/front/src/index.tsx":"1","/home/audrey/Bureau/tamplo/front/src/reportWebVitals.js":"2","/home/audrey/Bureau/tamplo/front/src/App.tsx":"3","/home/audrey/Bureau/tamplo/front/src/styles/element.js":"4","/home/audrey/Bureau/tamplo/front/src/components/Student.tsx":"5","/home/audrey/Bureau/tamplo/front/src/components/Teacher.tsx":"6","/home/audrey/Bureau/tamplo/front/src/utils/average.js":"7","/home/audrey/Bureau/tamplo/front/src/components/MoodModal.tsx":"8","/home/audrey/Bureau/tamplo/front/src/styles/modal-element.js":"9"},{"size":699,"mtime":1608134773017,"results":"10","hashOfConfig":"11"},{"size":356,"mtime":1605628447106,"results":"12","hashOfConfig":"11"},{"size":1084,"mtime":1608131022407,"results":"13","hashOfConfig":"11"},{"size":491,"mtime":1608136334964,"results":"14","hashOfConfig":"11"},{"size":1888,"mtime":1608135584331,"results":"15","hashOfConfig":"11"},{"size":2676,"mtime":1608131022407,"results":"16","hashOfConfig":"11"},{"size":521,"mtime":1608131022407,"results":"17","hashOfConfig":"11"},{"size":3576,"mtime":1608131022407,"results":"18","hashOfConfig":"11"},{"size":1243,"mtime":1605777346044,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"isl60w",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/audrey/Bureau/tamplo/front/src/index.tsx",[],["41","42","43","44","45","46","47"],"/home/audrey/Bureau/tamplo/front/src/reportWebVitals.js",[],["48","49","50","51","52","53","54"],"/home/audrey/Bureau/tamplo/front/src/App.tsx",[],"/home/audrey/Bureau/tamplo/front/src/styles/element.js",[],"/home/audrey/Bureau/tamplo/front/src/components/Student.tsx",[],"/home/audrey/Bureau/tamplo/front/src/components/Teacher.tsx",["55"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useHistory, RouteComponentProps } from 'react-router-dom'\n\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody\n} from '@material-ui/core'\nimport averageValueOfArray from '../utils/average'\nimport { IMood, IStudent } from '../types/data'\n\ninterface IRouteInfo {\n  mdp: string\n}\n\nconst Teacher = ({ match }: RouteComponentProps<IRouteInfo>): JSX.Element => {\n  const [moods, setMoods] = useState<IMood[]>([])\n  const [students, setStudents] = useState<IStudent[]>([])\n  const [dates, setDates] = useState<any[]>([])\n  const history = useHistory()\n\n  const getData = async () => {\n    const { mdp } = match.params\n    try {\n      const resultMood = await axios('/moods', {\n        params: { mdp }\n      })\n      setMoods(resultMood.data)\n      setDates([...new Set(resultMood.data.map((el: IMood) => el.date))].sort())\n\n      const resultStudents = await axios('/students')\n      setStudents(resultStudents.data)\n    } catch (error) {\n      history.push('/teacher')\n    }\n  }\n\n  useEffect(() => {\n    getData()\n    // eslint-disable-next-line\n  }, [])\n\n  if (moods === null || students === null || dates === null) {\n    return <p>Loading...</p>\n  }\n\n  return (\n    <div className=\"teacher-container\">\n      <h2>Suivi d'humeur</h2>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>&nbsp;</TableCell>\n            {dates.map((date) => (\n              <TableCell>{date}</TableCell>\n            ))}\n            <TableCell>Moy/élève</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {students.map((student) => (\n            <TableRow>\n              <TableCell>{student.firstname}</TableCell>\n              {dates.map((date) => (\n                <TableCell>\n                  {\n                    (\n                      moods.find(\n                        (mood) =>\n                          mood.student_id === student.id && mood.date === date\n                      ) || {}\n                    ).note\n                  }\n                </TableCell>\n              ))}\n              <TableCell>\n                {averageValueOfArray(moods, student.id, 'student_id', 'note')}\n              </TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell>Moy/jour</TableCell>\n            {dates.map((date) => (\n              <TableCell>\n                {averageValueOfArray(moods, date, 'date', 'note')}\n              </TableCell>\n            ))}\n            <TableCell>&nbsp;</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Teacher\n","/home/audrey/Bureau/tamplo/front/src/utils/average.js",[],"/home/audrey/Bureau/tamplo/front/src/components/MoodModal.tsx",[],"/home/audrey/Bureau/tamplo/front/src/styles/modal-element.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"70"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"71","severity":1,"message":"72","line":22,"column":38,"nodeType":"73","messageId":"74","endLine":22,"endColumn":41,"suggestions":"75"},"jest/no-try-expect",["76"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["77"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["78","79"],"no-conditional-expect","padding-line-between-statements",{"messageId":"80","fix":"81","desc":"82"},{"messageId":"83","fix":"84","desc":"85"},"suggestUnknown",{"range":"86","text":"87"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"86","text":"88"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[605,608],"unknown","never"]